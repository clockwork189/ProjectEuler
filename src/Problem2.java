/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */

public class Problem2 {
	public static void main( String [] args ) {
		//Can be anything, really doesnt matter as the if statement checks to see if it is less than 4 mil
		//I did cheat a bit here and experimented seeing which fib number passes 4 mil and it happens to be 34
		//Hence the real number we need it 33
		int n = 40;
		long FibSumEven = 0;
		for( int i = 0; i <= n; i++ ) {
			long currFib = Fibionacci( i );
			if( currFib < 4000000 && currFib%2 == 0 ) { 
				FibSumEven = FibSumEven + currFib;
			}
		}
		System.out.println( FibSumEven );
	}
	
	public static long Fibionacci( int n ) {
		if( n == 0 ) {
			return 0;
		} else if( n == 1 ) {
			return 1;
		} else {
			return Fibionacci( n-1 ) + Fibionacci( n -2 );
		}
	}
}
